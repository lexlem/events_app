# Generated by Django 2.2.6 on 2019-10-16 20:48

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('geo', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400, verbose_name='Название')),
                ('position', models.SmallIntegerField(default=0, verbose_name='Позиция')),
            ],
            options={
                'verbose_name_plural': 'Категории',
                'verbose_name': 'Категория',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(max_length=35, verbose_name='Название')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('published', 'Опубликовано'), ('archived', 'В архиве'), ('rejected', 'Отклонено'), ('deleted', 'Удалено')], default='draft', max_length=30, verbose_name='Статус')),
                ('description', models.TextField(blank=True, max_length=250, null=True, verbose_name='Описание')),
                ('start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время начала')),
                ('end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время окончания')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('social_links', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('visibility', models.CharField(choices=[('friends', 'Только для друзей'), ('everyone', 'Для всех')], default='friends', max_length=30, verbose_name='Отображение')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='events.Category', verbose_name='Категория')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='geo.Address')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Событие',
            },
        ),
        migrations.CreateModel(
            name='EventPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='upload', verbose_name='Оригинал')),
                ('position', models.IntegerField(default=1, verbose_name='Позиция')),
                ('title', models.TextField(blank=True, null=True, verbose_name='Заголовок')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='events.Event', verbose_name='Событие')),
            ],
            options={
                'verbose_name_plural': 'Изображения',
                'verbose_name': 'Изображение',
            },
        ),
        migrations.CreateModel(
            name='EventCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='calendar', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('events', models.ManyToManyField(to='events.Event')),
            ],
            options={
                'verbose_name': 'Календарь',
            },
        ),
    ]
